
1. 基本组成
cmake_minimum_required(VERSION 2.8)
project(myProject)  

find_package(OpenCV REQUIRED)  


set(REALSENSE_INCLUDE_DIR "/usr/local/include/librealsense")
set(REALSENSE_LIBRARY "/usr/local/lib/librealsense.so")


add_executable(myProject main.cpp)  

target_link_libraries(myProject
	${OpenCV_LIBS}
	${REALSENSE_LIBRARY}
	)  


2. 查看编译器支持版本
include(CheckCXXCompilerFlag)  
CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)  
CHECK_CXX_COMPILER_FLAG("-std=c++0x" COMPILER_SUPPORTS_CXX0X)  
if(COMPILER_SUPPORTS_CXX11)  
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")  
elseif(COMPILER_SUPPORTS_CXX0X)  
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")  
else()  
     message(STATUS "The compiler ${CMAKE_CXX_COMPILER} has no C++11 support. Please use a different C++ compiler.")  
endif() 

3. 设置.cmake文件目录
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_CURRENT_SOURCE_DIR}")
 












完整CMakeLists.txt

cmake_minimum_required(VERSION 2.8)
project(myProject)  

find_package(OpenCV REQUIRED)


add_executable(myProject main.cpp)  

target_link_libraries(myProject 
	${OpenCV_LIBS}
	${REALSENSE_LIBRARY}
	)  
